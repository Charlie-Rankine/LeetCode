#include <iostream>
#include <vector>

using namespace std;

class Solution {
public:
  int maxArea(vector<int> &height) {
    int left = 0, right = height.size() - 1;
    int highest = 0, shorter = 2e9;

    while (left != right) {
      shorter = min(height[left], height[right]);
      highest = max(highest, shorter * (right - left));

      if (height[left] <= height[right])
        ++left;
      else
        --right;
    }

    return highest;
  }
};

int main() {
  Solution s;
  vector<int> nums;

  nums = {1, 8, 6, 2, 5, 4, 8, 3, 7};
  cout << s.maxArea(nums) << endl;

  nums = {
      14, 2,  7,  7,  4,  17, 9,  2,  16, 10, 9,  5,  9,  19, 5,  0,  1,  8,
      15, 14, 9,  17, 14, 11, 1,  9,  1,  0,  10, 7,  1,  17, 14, 3,  2,  7,
      16, 9,  15, 13, 6,  5,  6,  8,  13, 8,  9,  4,  11, 16, 11, 12, 1,  4,
      12, 8,  1,  9,  2,  9,  6,  7,  12, 18, 11, 18, 3,  18, 4,  0,  5,  19,
      6,  6,  3,  6,  2,  11, 19, 6,  8,  2,  15, 11, 5,  6,  12, 9,  7,  3,
      12, 11, 4,  12, 10, 0,  2,  14, 4,  7,  7,  13, 2,  17, 0,  15, 16, 18,
      17, 3,  6,  9,  3,  12, 15, 11, 19, 16, 7,  10, 13, 16, 3,  11, 14, 3,
      17, 20, 16, 6,  8,  18, 4,  16, 6,  6,  9,  17, 19, 19, 7,  10, 3,  6,
      3,  4,  16, 16, 3,  8,  6,  3,  11, 7,  11, 11, 13, 11, 11, 20, 16, 1,
      17, 0,  2,  8,  3,  12, 5,  15, 12, 7,  15, 9,  1,  5,  12, 19, 18, 9,
      17, 9,  19, 10, 15, 18, 12, 2,  11, 7,  10, 20, 14, 16, 5,  8,  10, 16,
      0,  3,  4,  18, 16, 18, 2,  8,  13, 4,  17, 1,  18, 16, 3,  6,  15, 16,
      10, 8,  4,  1,  0,  8,  12, 14, 12, 18, 10, 14, 9,  13, 15, 13, 0,  10,
      10, 15, 18, 9,  20, 12, 17, 20, 15, 1,  6,  4,  13, 6,  6,  10, 7,  8,
      16, 14, 10, 14, 19, 17, 6,  6,  7,  5,  14, 5,  2,  1,  6,  8,  2,  0,
      5,  19, 7,  10, 17, 19, 18, 2,  13, 20, 4,  10, 3,  6,  10, 16, 2,  18,
      7,  5,  3,  4,  16, 8,  16, 8,  15, 19, 7,  17, 19, 12, 12, 17, 4,  11,
      2,  10, 15, 7,  10, 19, 2,  5,  7,  7,  5,  4,  2,  1,  7,  12, 1,  6,
      20, 19, 19, 1,  4,  4,  16, 2,  18, 10, 13, 9,  18, 2,  14, 6,  14, 2,
      1,  10, 20, 12, 15, 7,  3,  17, 14, 11, 9,  8,  10, 2,  5,  18, 5,  12,
      7,  18, 7,  7,  7,  9,  9,  1,  9,  6,  14, 14, 4,  18, 6,  10, 11, 1,
      15, 15, 15, 10, 6,  19, 10, 18, 19, 19, 5,  5,  17, 2,  14, 2,  11, 20,
      17, 10, 18, 13, 6,  13, 3,  9,  7,  11, 1,  20, 15, 4,  0,  19, 17, 3,
      18, 18, 9,  11, 5,  14, 19, 17, 8,  20, 9,  0,  19, 18, 10, 10, 12, 1,
      0,  14, 12, 16, 13, 17, 9,  15, 6,  8,  15, 4,  17, 5,  3,  7,  16, 4,
      15, 18, 13, 5,  8,  11, 20, 19, 12, 19, 4,  6,  3,  0,  12, 5,  3,  0,
      10, 6,  20, 11, 6,  7,  20, 12, 10, 3,  3,  13, 0,  14, 6,  20, 7,  7,
      1,  0,  5,  4,  4,  5,  11, 15, 13, 15, 7,  1,  14, 18, 2,  16, 8,  4,
      6,  14, 1,  5,  7,  19, 9,  12, 2,  14, 19, 17, 0,  12, 1,  19, 8,  19,
      5,  8,  17, 1,  7,  6,  8,  18, 9,  16, 5,  6,  14, 9,  19, 1,  8,  20,
      17, 11, 17, 10, 17, 12, 12, 8,  3,  16, 20, 9,  6,  6,  18, 20, 0,  5,
      18, 19, 3,  12, 13, 18, 1,  3,  2,  1,  3,  2,  5,  6,  7,  2,  0,  13,
      0,  4,  0,  9,  7,  14, 15, 19, 17, 19, 20, 1,  17, 12, 19, 9,  7,  6,
      6,  13, 14, 14, 1,  17, 7,  5,  13, 9,  7,  10, 14, 5,  5,  4,  2,  7,
      12, 0,  0,  15, 12, 9,  6,  19, 12, 2,  4,  15, 0,  4,  0,  7,  18, 0,
      0,  6,  9,  11, 5,  19, 12, 15, 5,  7,  0,  11, 6,  20, 4,  14, 6,  13,
      8,  3,  0,  13, 5,  18, 13, 11, 17, 2,  13, 7,  13, 8,  0,  7,  8,  0,
      18, 7,  4,  4,  20, 20, 16, 5,  11, 18, 10, 4,  20, 8,  11, 14, 14, 16,
      13, 20, 2,  8,  10, 7,  3,  16, 16, 3,  10, 16, 20, 8,  14, 17, 2,  11,
      18, 6,  1,  6,  15, 1,  17, 4,  10, 0,  15, 20, 12, 11, 6,  2,  13, 0,
      15, 8,  17, 0,  4,  12, 1,  20, 14, 0,  13, 16, 19, 17, 11, 9,  1,  16,
      16, 17, 10, 3,  16, 15, 16, 11, 20, 0,  8,  20, 18, 17, 15, 6,  7,  1,
      8,  3,  7,  7,  6,  0,  2,  20, 15, 17, 13, 8,  2,  19, 13, 9,  19, 17,
      11, 4,  16, 0,  12, 14, 11, 18, 8,  16, 9,  6,  8,  10, 14, 6,  13, 6,
      19, 0,  13, 9,  4,  7,  4,  4,  3,  3,  3,  17, 1,  19, 20, 4,  16, 15,
      4,  0,  13, 12, 9,  17, 14, 10, 10, 13, 18, 15, 0,  20, 9,  14, 12, 5,
      1,  0,  19, 8,  12, 16, 5,  14, 3,  0,  12, 1,  13, 11, 5,  14, 12, 9,
      3,  1,  11, 13, 19, 5,  0,  5,  3,  8,  18, 15, 9,  20, 6,  11, 13, 9,
      20, 18, 14, 12, 13, 13, 11, 20, 10, 8,  16, 12, 0,  19, 6,  0,  7,  7,
      19, 19, 13, 11, 9,  20, 8,  14, 10, 14, 7,  17, 19, 9,  3,  13, 10, 5,
      13, 2,  18, 3,  10, 15, 15, 12, 14, 11, 0,  16, 10, 15, 1,  0,  16, 19,
      8,  7,  1,  10, 4,  10, 1,  0,  17, 20, 7,  7,  20, 19, 18, 2,  5,  3,
      16, 6,  20, 2,  5,  14, 17, 8,  14, 9,  12, 8,  7,  8,  16, 18, 1,  18,
      7,  4,  14, 19, 3,  6,  12, 20, 4,  18, 0,  15, 20, 7,  2,  11, 15, 14,
      11, 0,  8,  6,  7,  17, 4,  11, 15, 15, 13, 7,  2,  8,  5,  18, 17, 19,
      16, 17, 13, 5,  15, 9,  5,  3,  13, 20};
  cout << s.maxArea(nums) << endl;
}
